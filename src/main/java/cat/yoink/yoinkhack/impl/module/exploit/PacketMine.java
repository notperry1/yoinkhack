package cat.yoink.yoinkhack.impl.module.exploit;

import cat.yoink.yoinkhack.api.module.Category;
import cat.yoink.yoinkhack.api.module.Module;
import cat.yoink.yoinkhack.api.util.RenderUtil;
import net.minecraft.init.Blocks;
import net.minecraft.network.play.client.CPacketPlayerDigging;
import net.minecraft.util.EnumHand;
import net.minecraft.util.math.BlockPos;
import net.minecraftforge.client.event.RenderWorldLastEvent;
import net.minecraftforge.event.entity.player.PlayerInteractEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import net.minecraftforge.fml.common.gameevent.TickEvent;

/**
 * @author yoink
 * @since 8/26/2020
 */
public class PacketMine extends Module
{
	private int timer = -1;
	private BlockPos renderBlock = null;

	public PacketMine(String name, Category category, String description)
	{
		super(name, category, description);
	}

	@SubscribeEvent
	public void onBlockClick(PlayerInteractEvent.LeftClickBlock event)
	{
		if (mc.player == null || mc.world == null) return;

		if (canBreak(event.getPos()))
		{
			mc.player.swingArm(EnumHand.MAIN_HAND);
			mc.player.connection.sendPacket(new CPacketPlayerDigging(CPacketPlayerDigging.Action.START_DESTROY_BLOCK, event.getPos(), event.getFace()));
			mc.player.connection.sendPacket(new CPacketPlayerDigging(CPacketPlayerDigging.Action.STOP_DESTROY_BLOCK, event.getPos(), event.getFace()));
			if (renderBlock == null) renderBlock = event.getPos();
		}
	}

	@SubscribeEvent
	public void onWorldRender(RenderWorldLastEvent event)
	{
		if (mc.player == null || mc.world == null) return;

		if (renderBlock != null && timer > 0)
		{
			RenderUtil.drawBoxFromBlockpos(renderBlock, 0.3f, 0.3f, 0.3f, 0.5f);
		}
	}

	@SubscribeEvent
	public void onTick(TickEvent.ClientTickEvent event)
	{
		if (mc.player == null || mc.world == null) return;

		if (renderBlock != null && mc.world.getBlockState(renderBlock).getBlock() == Blocks.AIR) renderBlock = null;
		if (renderBlock != null && timer == -1) timer = 130;
		if (timer > 0) timer--;
		if (timer == 0)
		{
			timer = -1;
			renderBlock = null;
		}
	}

	@SuppressWarnings("ALL")
	private boolean canBreak(BlockPos pos)
	{
		return mc.world.getBlockState(pos).getBlock().getBlockHardness(mc.world.getBlockState(pos), mc.world, pos) != -1;
	}

}
